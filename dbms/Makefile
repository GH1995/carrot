#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS) -lpthread
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/dbms

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s -lpthread
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/dbms

OBJ_DEBUG = $(OBJDIR_DEBUG)/storage/DBFile.o $(OBJDIR_DEBUG)/storage/FreeBuffer.o $(OBJDIR_DEBUG)/storage/PageUtil.o $(OBJDIR_DEBUG)/storage/main.o $(OBJDIR_DEBUG)/table/Table.o $(OBJDIR_DEBUG)/segment/Segment.o $(OBJDIR_DEBUG)/table/TableUtil.o $(OBJDIR_DEBUG)/test/dataLoad.o $(OBJDIR_DEBUG)/util/DataUtil.o $(OBJDIR_DEBUG)/util/Thread.o $(OBJDIR_DEBUG)/buffer/ClockFIFOStrategy.o $(OBJDIR_DEBUG)/dataInput/input.o $(OBJDIR_DEBUG)/index/BPTree.o $(OBJDIR_DEBUG)/index/Index.o $(OBJDIR_DEBUG)/buffer/BufferManager.o $(OBJDIR_DEBUG)/segment/DataSegment.o $(OBJDIR_DEBUG)/segment/DirectorySegment.o $(OBJDIR_DEBUG)/segment/IndexSegment.o $(OBJDIR_DEBUG)/segment/MetaDataSegment.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/storage/DBFile.o $(OBJDIR_RELEASE)/storage/FreeBuffer.o $(OBJDIR_RELEASE)/storage/PageUtil.o $(OBJDIR_RELEASE)/storage/main.o $(OBJDIR_RELEASE)/table/Table.o $(OBJDIR_RELEASE)/segment/Segment.o $(OBJDIR_RELEASE)/table/TableUtil.o $(OBJDIR_RELEASE)/test/dataLoad.o $(OBJDIR_RELEASE)/util/DataUtil.o $(OBJDIR_RELEASE)/util/Thread.o $(OBJDIR_RELEASE)/buffer/ClockFIFOStrategy.o $(OBJDIR_RELEASE)/dataInput/input.o $(OBJDIR_RELEASE)/index/BPTree.o $(OBJDIR_RELEASE)/index/Index.o $(OBJDIR_RELEASE)/buffer/BufferManager.o $(OBJDIR_RELEASE)/segment/DataSegment.o $(OBJDIR_RELEASE)/segment/DirectorySegment.o $(OBJDIR_RELEASE)/segment/IndexSegment.o $(OBJDIR_RELEASE)/segment/MetaDataSegment.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG)/storage || mkdir -p $(OBJDIR_DEBUG)/storage
	test -d $(OBJDIR_DEBUG)/table || mkdir -p $(OBJDIR_DEBUG)/table
	test -d $(OBJDIR_DEBUG)/segment || mkdir -p $(OBJDIR_DEBUG)/segment
	test -d $(OBJDIR_DEBUG)/test || mkdir -p $(OBJDIR_DEBUG)/test
	test -d $(OBJDIR_DEBUG)/util || mkdir -p $(OBJDIR_DEBUG)/util
	test -d $(OBJDIR_DEBUG)/buffer || mkdir -p $(OBJDIR_DEBUG)/buffer
	test -d $(OBJDIR_DEBUG)/dataInput || mkdir -p $(OBJDIR_DEBUG)/dataInput
	test -d $(OBJDIR_DEBUG)/index || mkdir -p $(OBJDIR_DEBUG)/index

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/storage/DBFile.o: storage/DBFile.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c storage/DBFile.cpp -o $(OBJDIR_DEBUG)/storage/DBFile.o

$(OBJDIR_DEBUG)/storage/FreeBuffer.o: storage/FreeBuffer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c storage/FreeBuffer.cpp -o $(OBJDIR_DEBUG)/storage/FreeBuffer.o

$(OBJDIR_DEBUG)/storage/PageUtil.o: storage/PageUtil.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c storage/PageUtil.cpp -o $(OBJDIR_DEBUG)/storage/PageUtil.o

$(OBJDIR_DEBUG)/storage/main.o: storage/main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c storage/main.cpp -o $(OBJDIR_DEBUG)/storage/main.o

$(OBJDIR_DEBUG)/table/Table.o: table/Table.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c table/Table.cpp -o $(OBJDIR_DEBUG)/table/Table.o

$(OBJDIR_DEBUG)/segment/Segment.o: segment/Segment.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c segment/Segment.cpp -o $(OBJDIR_DEBUG)/segment/Segment.o

$(OBJDIR_DEBUG)/table/TableUtil.o: table/TableUtil.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c table/TableUtil.cpp -o $(OBJDIR_DEBUG)/table/TableUtil.o

$(OBJDIR_DEBUG)/test/dataLoad.o: test/dataLoad.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c test/dataLoad.cpp -o $(OBJDIR_DEBUG)/test/dataLoad.o

$(OBJDIR_DEBUG)/util/DataUtil.o: util/DataUtil.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c util/DataUtil.cpp -o $(OBJDIR_DEBUG)/util/DataUtil.o

$(OBJDIR_DEBUG)/util/Thread.o: util/Thread.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c util/Thread.cpp -o $(OBJDIR_DEBUG)/util/Thread.o

$(OBJDIR_DEBUG)/buffer/ClockFIFOStrategy.o: buffer/ClockFIFOStrategy.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c buffer/ClockFIFOStrategy.cpp -o $(OBJDIR_DEBUG)/buffer/ClockFIFOStrategy.o

$(OBJDIR_DEBUG)/dataInput/input.o: dataInput/input.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c dataInput/input.cpp -o $(OBJDIR_DEBUG)/dataInput/input.o

$(OBJDIR_DEBUG)/index/BPTree.o: index/BPTree.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c index/BPTree.cpp -o $(OBJDIR_DEBUG)/index/BPTree.o

$(OBJDIR_DEBUG)/index/Index.o: index/Index.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c index/Index.cpp -o $(OBJDIR_DEBUG)/index/Index.o

$(OBJDIR_DEBUG)/buffer/BufferManager.o: buffer/BufferManager.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c buffer/BufferManager.cpp -o $(OBJDIR_DEBUG)/buffer/BufferManager.o

$(OBJDIR_DEBUG)/segment/DataSegment.o: segment/DataSegment.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c segment/DataSegment.cpp -o $(OBJDIR_DEBUG)/segment/DataSegment.o

$(OBJDIR_DEBUG)/segment/DirectorySegment.o: segment/DirectorySegment.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c segment/DirectorySegment.cpp -o $(OBJDIR_DEBUG)/segment/DirectorySegment.o

$(OBJDIR_DEBUG)/segment/IndexSegment.o: segment/IndexSegment.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c segment/IndexSegment.cpp -o $(OBJDIR_DEBUG)/segment/IndexSegment.o

$(OBJDIR_DEBUG)/segment/MetaDataSegment.o: segment/MetaDataSegment.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c segment/MetaDataSegment.cpp -o $(OBJDIR_DEBUG)/segment/MetaDataSegment.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)/storage
	rm -rf $(OBJDIR_DEBUG)/table
	rm -rf $(OBJDIR_DEBUG)/segment
	rm -rf $(OBJDIR_DEBUG)/test
	rm -rf $(OBJDIR_DEBUG)/util
	rm -rf $(OBJDIR_DEBUG)/buffer
	rm -rf $(OBJDIR_DEBUG)/dataInput
	rm -rf $(OBJDIR_DEBUG)/index

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE)/storage || mkdir -p $(OBJDIR_RELEASE)/storage
	test -d $(OBJDIR_RELEASE)/table || mkdir -p $(OBJDIR_RELEASE)/table
	test -d $(OBJDIR_RELEASE)/segment || mkdir -p $(OBJDIR_RELEASE)/segment
	test -d $(OBJDIR_RELEASE)/test || mkdir -p $(OBJDIR_RELEASE)/test
	test -d $(OBJDIR_RELEASE)/util || mkdir -p $(OBJDIR_RELEASE)/util
	test -d $(OBJDIR_RELEASE)/buffer || mkdir -p $(OBJDIR_RELEASE)/buffer
	test -d $(OBJDIR_RELEASE)/dataInput || mkdir -p $(OBJDIR_RELEASE)/dataInput
	test -d $(OBJDIR_RELEASE)/index || mkdir -p $(OBJDIR_RELEASE)/index

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/storage/DBFile.o: storage/DBFile.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c storage/DBFile.cpp -o $(OBJDIR_RELEASE)/storage/DBFile.o

$(OBJDIR_RELEASE)/storage/FreeBuffer.o: storage/FreeBuffer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c storage/FreeBuffer.cpp -o $(OBJDIR_RELEASE)/storage/FreeBuffer.o

$(OBJDIR_RELEASE)/storage/PageUtil.o: storage/PageUtil.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c storage/PageUtil.cpp -o $(OBJDIR_RELEASE)/storage/PageUtil.o

$(OBJDIR_RELEASE)/storage/main.o: storage/main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c storage/main.cpp -o $(OBJDIR_RELEASE)/storage/main.o

$(OBJDIR_RELEASE)/table/Table.o: table/Table.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c table/Table.cpp -o $(OBJDIR_RELEASE)/table/Table.o

$(OBJDIR_RELEASE)/segment/Segment.o: segment/Segment.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c segment/Segment.cpp -o $(OBJDIR_RELEASE)/segment/Segment.o

$(OBJDIR_RELEASE)/table/TableUtil.o: table/TableUtil.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c table/TableUtil.cpp -o $(OBJDIR_RELEASE)/table/TableUtil.o

$(OBJDIR_RELEASE)/test/dataLoad.o: test/dataLoad.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c test/dataLoad.cpp -o $(OBJDIR_RELEASE)/test/dataLoad.o

$(OBJDIR_RELEASE)/util/DataUtil.o: util/DataUtil.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c util/DataUtil.cpp -o $(OBJDIR_RELEASE)/util/DataUtil.o

$(OBJDIR_RELEASE)/util/Thread.o: util/Thread.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c util/Thread.cpp -o $(OBJDIR_RELEASE)/util/Thread.o

$(OBJDIR_RELEASE)/buffer/ClockFIFOStrategy.o: buffer/ClockFIFOStrategy.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c buffer/ClockFIFOStrategy.cpp -o $(OBJDIR_RELEASE)/buffer/ClockFIFOStrategy.o

$(OBJDIR_RELEASE)/dataInput/input.o: dataInput/input.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c dataInput/input.cpp -o $(OBJDIR_RELEASE)/dataInput/input.o

$(OBJDIR_RELEASE)/index/BPTree.o: index/BPTree.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c index/BPTree.cpp -o $(OBJDIR_RELEASE)/index/BPTree.o

$(OBJDIR_RELEASE)/index/Index.o: index/Index.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c index/Index.cpp -o $(OBJDIR_RELEASE)/index/Index.o

$(OBJDIR_RELEASE)/buffer/BufferManager.o: buffer/BufferManager.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c buffer/BufferManager.cpp -o $(OBJDIR_RELEASE)/buffer/BufferManager.o

$(OBJDIR_RELEASE)/segment/DataSegment.o: segment/DataSegment.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c segment/DataSegment.cpp -o $(OBJDIR_RELEASE)/segment/DataSegment.o

$(OBJDIR_RELEASE)/segment/DirectorySegment.o: segment/DirectorySegment.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c segment/DirectorySegment.cpp -o $(OBJDIR_RELEASE)/segment/DirectorySegment.o

$(OBJDIR_RELEASE)/segment/IndexSegment.o: segment/IndexSegment.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c segment/IndexSegment.cpp -o $(OBJDIR_RELEASE)/segment/IndexSegment.o

$(OBJDIR_RELEASE)/segment/MetaDataSegment.o: segment/MetaDataSegment.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c segment/MetaDataSegment.cpp -o $(OBJDIR_RELEASE)/segment/MetaDataSegment.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)/storage
	rm -rf $(OBJDIR_RELEASE)/table
	rm -rf $(OBJDIR_RELEASE)/segment
	rm -rf $(OBJDIR_RELEASE)/test
	rm -rf $(OBJDIR_RELEASE)/util
	rm -rf $(OBJDIR_RELEASE)/buffer
	rm -rf $(OBJDIR_RELEASE)/dataInput
	rm -rf $(OBJDIR_RELEASE)/index

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

